@model Services.DTO.CreateStudentDTO
@using Resources

<div class="col-lg-8 content">
    <p class="page_title">@(Model.EditMode?Resource.EditStudent:Resource.CreateStudent)</p>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div>
            @Html.LabelFor(model => model.StudentId, htmlAttributes: new { @class = "required" })
            @Html.EditorFor(model => model.StudentId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "required" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "required" })
            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control",
           @type = "date", @data_val_date = Resource.DateOnlyError } })
            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "required" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "required" })
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "required" })
            @Html.DropDownListFor(model => model.Gender, Model.AllGenders, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
        @Html.HiddenFor(model => model.EditMode)
        <br>
        <a class="btn btn-secondary" data-toggle="modal" href="#cancelModal">@Resource.Cancel</a>
        <button type="submit" class="btn btn-primary">@Resource.Done</button>
    }
    <!-- Cancel Modal -->
    <div class="modal fade" id="cancelModal" tabindex="-1" role="dialog" aria-labelledby="cancelModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cancelModalLabel">@Resource.Cancel</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    </button>
                </div>
                <div class="modal-body">
                    <input type="text" name="id" hidden />
                    <p>@Resource.ConfirmCancel</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">@Resource.No</button>
                    <a href="#" class="btn btn-primary">@Resource.Yes</a>
                </div>
            </div>
        </div>
    </div>
    <!-- End of Cancel Modal -->
</div>